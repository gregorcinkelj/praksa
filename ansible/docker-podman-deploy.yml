---
- name: Setup Nginx with Docker/Podman
  hosts: all
  gather_facts: yes
  vars_files:
    - index.yaml
    - certs.yaml

  become: yes

  tasks:
    - name: Create deployment directory
      file:
        path: /home/xlab/docker
        state: directory
        owner: xlab
        group: xlab
        mode: '0755'

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: xlab
        group: xlab
        mode: '0775'
      loop:
        - /home/xlab/docker/html
        - /home/xlab/docker/certs
        - /home/xlab/docker/conf.d

    - name: Create index.html file
      copy:
        dest: /home/xlab/docker/html/index.html
        content: "{{ index_html }}"
        owner: xlab
        group: xlab
        mode: '0644'

    - name: Generate SSL certificates (self-signed for testing)
      command: >
        openssl req -x509 -newkey rsa:4096
        -keyout {{ ssl_key_path }}
        -out {{ ssl_cert_path }}
        -days {{ days_valid }} -nodes
        -subj "/C={{ country }}/ST={{ state }}/L={{ locality }}/O={{ organization }}/CN={{ common_name }}"
      args:
        creates: "{{ ssl_cert_path }}"

    - name: Copy default .conf to the nginx server
      copy:
        src: ../default.conf
        dest: /home/xlab/docker/conf.d/default.conf
        owner: xlab
        group: xlab
        mode: '0644'

    # Install Docker on Ubuntu (for non-RedHat systems)
    - name: Update package lists (Debian)
      apt:
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Create keyrings directory (Ubuntu)
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: ansible_distribution == "Ubuntu"

    - name: Download Docker's GPG key (Ubuntu)
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker repository (Ubuntu)
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list
      when: ansible_distribution == "Ubuntu"

    - name: Update package lists again (Ubuntu)
      apt:
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Install required packages (Debian)
      apt:
        name:
          - ca-certificates
          - curl
        state: latest
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker packages (Ubuntu)
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
      when: ansible_distribution == "Ubuntu"

    - name: Deploy Nginx container
      community.docker.docker_container:
        name: nginx-test
        image: docker.io/library/nginx:latest
        state: started
        restart_policy: always
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - "/home/xlab/docker/html:/usr/share/nginx/html"
          - "/home/xlab/docker/conf.d:/etc/nginx/conf.d"
          - "/home/xlab/docker/certs:/etc/nginx/certs"
      when: ansible_distribution == "Ubuntu"

    - name: Install Podman and dependencies (RedHat)
      dnf:
        name:
          - podman
        state: latest
      when: ansible_distribution_file_variety == "RedHat"

    - name: Create a Quadlet file
      containers.podman.podman_container:
        name: nginx-test
        image: docker.io/library/nginx:latest
        state: quadlet
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - "/home/xlab/docker/html:/usr/share/nginx/html:Z"
          - "/home/xlab/docker/certs:/etc/nginx/certs:Z"
          - "/home/xlab/docker/conf.d:/etc/nginx/conf.d:Z"
        quadlet_options:
          - "AutoUpdate=registry"
          - "Pull=newer"
          - |
            [Install]
            WantedBy=default.target
      when: ansible_distribution_file_variety == "RedHat"

    - name: Reload systemd daemon (RedHat)
      systemd:
        daemon_reload: yes
      when: ansible_distribution_file_variety == "RedHat"

    - name: Enable and start nginx-test service (RedHat)
      systemd:
        name: nginx-test
        enabled: yes
        state: started
      when: ansible_distribution_file_variety == "RedHat"
